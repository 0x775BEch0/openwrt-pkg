name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout Code
      uses: actions/checkout@main
 
    - name: Init Ubuntu
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync 
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone Openwrt
      if: ( !cancelled() )
      id: clone
      working-directory: /workdir
      run: |
        df -hT $PWD
        cd $GITHUB_WORKSPACE
        versionpk=`git log -1 --format='%h'`
        cd -
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        version=`git log -1 --format='%h'`
        TAG_VERSION="v$(date +"%g.%j")-${version:0:4}.${versionpk:0:4}"
        echo version:${TAG_VERSION}
        echo "::set-output name=version::${TAG_VERSION}"
        echo "::set-output name=status::success"
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Set Feeds & Package
      id: feeds
      if: ( steps.clone.outputs.status == 'success' && !cancelled())
      run: |
        cd openwrt
        git clone https://github.com/jerrykuku/lua-maxminddb.git package/lua-maxminddb
        # git clone https://github.com/jerrykuku/luci-theme-argon.git -b 18.06 package/luci-theme-argon
        git clone https://github.com/jerrykuku/luci-app-vssr.git package/luci-app-vssr
        echo 'src-git helloworld https://github.com/fw876/helloworld' >> feeds.conf.default
        echo 'src-git passwall https://github.com/xiaorouji/openwrt-passwall' >> feeds.conf.default
        echo 'src-git nas https://github.com/linkease/nas-packages' >> feeds.conf.default
        echo 'src-git nas_luci https://github.com/linkease/nas-packages-luci' >> feeds.conf.default
         echo 'src-git xray https://github.com/yichya/luci-app-xray' >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a -f
        echo "::set-output name=status::success"

    - name: Set Defaults
      if: ( steps.feeds.outputs.status == 'success' && !cancelled() )
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        [ -e zzz-default-settings ] && cat zzz-default-settings > openwrt/package/lean/default-settings/files/zzz-default-settings
        [ -e bastip.sh ] && cat bastip.sh > openwrt/package/base-files/files/bin/bastip && chmod +x openwrt/package/base-files/files/bin/bastip

    - name: Download Packages
      id: download
      if: ( steps.feeds.outputs.status == 'success' && !cancelled() )
      run: |
        cd openwrt
        make defconfig
        make download -j8
        echo "::set-output name=status::success"
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        ./scripts/diffconfig.sh > /workdir/diff.config

    - name: Make Compile
      id: compile
      if: ( steps.download.outputs.status == 'success' && !cancelled() )
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j$(nproc) || make -j$(nproc) V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check Space Usage
      if: ( !cancelled() )
      run: df -hT
 
    - name: Organize Files
      id: organize
      if: ( steps.compile.outputs.status == 'success' && !cancelled() )
      run: |
        cd openwrt/bin/targets/*/*
        mv /workdir/diff.config .
        rm -rf packages
        rm -rf openwrt-x86-64-generic-kernel.bin
        rm -rf openwrt-x86-64-generic.manifest
        rm -rf sha256sums
        rm -rf version.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: ( steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled() )
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Release Upload
      uses: softprops/action-gh-release@v1
      if: ( steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled() )
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.clone.outputs.version }}
        files: ${{ env.FIRMWARE }}/*

    - name: Delete Older Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: ( env.UPLOAD_RELEASE == 'true' && !cancelled() )
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Workflow Runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 8
